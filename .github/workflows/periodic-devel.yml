name: "[Periodic] Devel:CAPS:Registry:2.0"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */3 * * *"

jobs:
  test_suse_private_registry:
    name: Private Registry 2.0
    runs-on: ecp-runners
    strategy:
      matrix:
        action: [install, upgrade]
    env:
      NAMESPACE: registry20-periodic-${{ matrix.action }}
      HELM_EXPERIMENTAL_OCI: 1
      HELM_ACTION: ${{ matrix.action }}
      HELM_VALUES_FILE: periodic20-${HELM_ACTION}-values.yaml
    steps:
      - name: Drop KUBECONFIG
        env:
          sec_kubeconfig: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$sec_kubeconfig" | base64 -d > ./config
          echo "::set-env name=KUBECONFIG::./config"
      - name: Get cluster ingress IP
        run: |
          echo "::set-env name=INGRESS_IP::$(kubectl get svc nginx-ingress-controller -n nginx-ingress -o json | jq -r ".status.loadBalancer.ingress[].ip")"
          echo "::set-env name=NOW::$(date +'%d.%m.%Y - %H:%M:%S')"
      - name: Generate values file
        run: |
          cat << EOF | tee ${HELM_VALUES_FILE}
          expose:
            ingress:
              hosts:
                core: "${NAMESPACE}.${INGRESS_IP}.nip.io"
          externalURL: "https://${NAMESPACE}.${INGRESS_IP}.nip.io"
          updateStrategy:
            type: Recreate
          internalTLS:
            enabled: false
          imagePullPolicy: Always
          EOF
      - name: Delete previous deployment
        if: ${{ matrix.action == 'install' }}
        run: |
          kubectl delete ns ${NAMESPACE} || true
          kubectl create ns ${NAMESPACE}
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          token: "${{ github.token }}"
          description: Deploying from Devel:CAPS:Registry:2.0 @ ${{ env.NOW }}
          environment: periodic-2.0 (${{ matrix.action }})
      - name: SUSE Private Registry (${{ matrix.action }})
        run: |
          helm chart pull registry.suse.de/devel/caps/registry/2.0/charts/harbor:1.4.2
          helm chart export registry.suse.de/devel/caps/registry/2.0/charts/harbor:1.4.2
          [[ ${HELM_ACTION} = "upgrade" ]] && HELM_EXTRA_ARG="--install"
          helm ${HELM_ACTION} ${HELM_EXTRA_ARG} ${NAMESPACE} ./harbor -n ${NAMESPACE} --values ${HELM_VALUES_FILE} --timeout 8m --wait
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          description: Deployed successfully from Devel:CAPS:Registry:2.0 @ ${{ env.NOW }}
          environment_url: https://${{ env.NAMESPACE }}.${{ env.INGRESS_IP }}.nip.io
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          description: Deployment from Devel:CAPS:Registry:2.0 failed @ ${{ env.NOW }}
          environment_url: https://${{ env.NAMESPACE }}.${{ env.INGRESS_IP }}.nip.io
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
